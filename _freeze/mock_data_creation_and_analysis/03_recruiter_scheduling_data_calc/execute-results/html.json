{
  "hash": "5509cac41d0c8cb3c12b9b6f2bf8cdd8",
  "result": {
    "engine": "knitr",
    "markdown": "# Load Packages\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'here' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at C:/Users/ebiek/OneDrive - UTHealth Houston/Cannell lab/r33_dashboards\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ids)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'ids' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lubridate, include.only = c(\"year\", \"month\", \"day\", \"hour\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'lubridate' was built under R version 4.3.2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load function for converting POSIXct dates to a Month YYYY format.\nsource(here::here(\"r\", \"month_name_year.R\"))\n```\n:::\n\n\n# Load data\n\n::: {.cell}\n\n```{.r .cell-code}\nraw_data <- readRDS(here::here(\"data\", \"recruitment_and_scheduling_mock_data_raw.rds\"))\n\nweekdays(raw_data$call_date_time) %>% unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Tuesday\"   \"Wednesday\" \"Thursday\"  \"Friday\"    \"Monday\"   \n```\n\n\n:::\n:::\n\n\n## Split the date-time variable\n\n::: {.cell}\n\n```{.r .cell-code}\ndate_time <- raw_data %>% \n  mutate(\n    call_hour = lubridate::hour(call_date_time),\n    call_hour_f = factor(call_hour, \n      labels = c(\"9-9:59\", \"10-10:59\", \"11-11:59\", \"12-12:59\", \"13-13:59\", \n                 \"14-14:59\", \"15-15:59\", \"16-16:59\", \"17\")\n      ),\n    call_day = weekdays(as.Date(call_date_time)),\n    call_day = factor(call_day,\n                      levels = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")),\n    call_date = as.Date(call_date_time)\n    )%>%\n      month_year(call_date_time, \"call_month_yr\") %>%\n      relocate(c(call_month_yr, call_date, call_day, call_hour, call_hour_f), \n               .after = \"call_date_time\")\n```\n:::\n\n\n## Gift card data (Gift card ID, person ID and dyad ID)\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(56)\ngift_card <- date_time %>% select(dyad_id, pc_yes_result) %>% filter(pc_yes_result == \"Interview scheduled\") %>% slice_sample(n = 180) %>%\n  mutate(\n    gift_card_id = ids::random_id(nrow(.), 5)\n  ) %>% select(-c(pc_yes_result))\n```\n:::\n\n\n## Join to Gift card Data\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_sch_gift <- date_time %>% left_join(., gift_card, by = \"dyad_id\")\n```\n:::\n\n\n## Create column of the overall responses\n\n::: {.cell}\n\n```{.r .cell-code}\noverall_response <- rec_sch_gift %>%\n  mutate(\n    overall_response = coalesce(interview_not_scheduled, pc_yes_result,\n    call_back_no, pc_no_result, no_message, left_message, answered)\n  )\n```\n:::\n\n\n# Save data\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save clinician tracking data\nsaveRDS(overall_response, here::here(\"data\", \"recruitment_mock_data_calc.rds\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}