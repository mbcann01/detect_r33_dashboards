{
  "hash": "a0862b53fe169972303569e6588d80e3",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'here' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at C:/Users/ebiek/OneDrive - UTHealth Houston/Cannell lab/r33_dashboards\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr, include.only = c(\"separate_wider_delim\", \"crossing\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tidyr' was built under R version 4.3.2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ids)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'ids' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(randomNames)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'randomNames' was built under R version 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lubridate, include.only = c(\"year\", \"month\", \"day\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'lubridate' was built under R version 4.3.2\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(generator, include.only = \"r_phone_numbers\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'generator' was built under R version 4.3.3\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set up ids so there's about 1.7 calls per patient with a total of 4941 calls\nset.seed(3)\nid1 <- c(1:2906) # total number of eligible individual patients\n\nid2 <- sample(id1, 2035) # Additional calls\n\ndyad_id <- sample(c(id1, id2))\n\nperson_id <- paste0(dyad_id, \"cr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create call date times\ndates <- data.frame(dates = seq(as.Date('2024-06-01'), as.Date('2024-11-30'), by = \"day\")) \ntimes <- c(paste0(9:17, \":00:00\"), paste0(9:17, \":30:00\"), paste0(9:17, \":15:00\"))\n\ncall_date_time <- tidyr::crossing(dates, data.frame(times)) %>% \n  mutate(\n    call_date_time = as.POSIXct(paste0(dates, times))\n  ) %>% select(call_date_time)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_rec <- paste0(\"rec\", 1:50)\n\nrec_id <- sample(c(rep(all_rec, 15), sample(x = all_rec, size = 4191, replace = TRUE)))\n```\n:::\n\n\n# Factor levels for variables\n\n::: {.cell}\n\n```{.r .cell-code}\nanswered_levels <- c(\"No answer/ busy sign\", \"Participant answered\", \"Voicemail\",\"Wrong number\", \n                      \"Someone else answered\")\n\nanswered_codes <- c(0,1,2,3,4)\n\nleft_message_levels <- c(\"No\", \"Yes\")\n\nleft_message_codes <- c(0,1)\n\nno_message_levels <- c(\"Voicemail box is full\", \"No voicemail box set up\", \"Other\")\n\nno_message_codes <- c(1,2,3)\n\n# text box\nset.seed(1)\nother_op <- sample(c(paste0(\"Some explanation_\",1:10 ), paste0(\"Another explanation_\", 1:18),                        \n                     paste0(\"A different explanation_\", 1:7)), size = 4941, replace = TRUE)\n\nanswered_someone_else_levels <- c(\"A spouse or partner\", \"An ex spouse or partner\", \"A parent or step-parent\",\n                           \"A brother or sister\", \"A son or daughter\", \"Another relative\", \"A coworker\",\n                           \"A neighbor\", \"A friend\", \"Some other non-relative\", \"Donâ€™t know\")\n\nanswered_someone_else_codes <- c(1,2,3,4,5,6,7,8,9,10,77)\n\nset.seed(4)\nanswered_someone_else_op <- sample(answered_someone_else_levels, size = 4941, replace = TRUE)\n\nparticipant_contacted_levels <- c(\"No\", \"Yes\")\n\nparticipant_contacted_codes <- c(0,1)\n\npc_no_result_levels <- c(\"Scheduled call back\", \"Unable to schedule callback\")\n\npc_no_result__codes <- c(1,2)\n\nset.seed(4)\npc_no_result_op <- sample(pc_no_result_levels, size = 4941, replace = TRUE)\n\n# call_back_date_time \n\n# call_back_phone_number \n\ncall_back_no_levels <- c(\"Person refused\", \"Language barrier\", \"Person hung up\",\n\"Participant impaired or disabled\", \"Participant deceased\", \n\"Participant not available\", \"Other\")\n\ncall_back_no_codes <- c(1,2,3,4,5,6,7)\n\nset.seed(3)\ncall_back_no_op <- sample(call_back_no_levels, size = 4941, replace = TRUE)\n\n# call_back_no_other \n\npc_yes_result_levels <- c(\"Interview scheduled\", \"Interview not scheduled\")\n\npc_yes_result_codes <- c(1,2)\n\nset.seed(3)\npc_yes_result_op <- sample(pc_yes_result_levels, size = 4941, replace = TRUE) \n\ninterview_not_scheduled_levels <- c(\"Participant refused/ hung up\", \n\"Participant is not eligible\") \n\ninterview_not_scheduled_codes <- c(1,2)\n\nset.seed(11)\ninterview_not_scheduled_op <- sample(interview_not_scheduled_levels, size = 4941, replace = TRUE)\n\nineligible_levels <- c(\"Cannot speak/read English or Spanish\", \n                \"Unwilling/unable to give consent\") \n\nineligible_codes <- c(1,2)\n\nset.seed(112)\nineligible_op <- sample(ineligible_levels, size = 4941, replace = TRUE)\n\nset.seed(2)\ncomments <- sample(c(paste0(\"Some comment_\",1:10 ), paste0(\"Another comment_\", 1:18), \n                      paste0(\"A different comment_\", 1:7), rep(NA, 3005)), size = 4941, replace = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(3)\nparticipant_phone_number <- r_phone_numbers(n = 4941)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(4)\nanswered <- sample(c(rep(\"No answer/ busy sign\", 750), rep(\"Participant answered\", 953), rep(\"Voicemail\", 904),\n              rep(\"Wrong number\", 124), rep(\"Someone else answered\", 753)), size = 4941, replace = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nrecr_data <- data.frame(dyad_id, person_id, call_date_time, rec_id, participant_phone_number, answered) %>%\n  mutate(\n    left_message = case_when(\n      answered == \"No answer/ busy sign\" ~ sample(c(\"Yes\", \"No\"), size = 4941, replace = TRUE), \n      answered == \"Voicemail\"            ~ sample(c(\"Yes\", \"No\"), size = 4941, replace = TRUE),\n      TRUE                               ~ NA\n    ),\n    no_message = case_when(\n      left_message == \"No\" ~ sample(c(\"Voicemail box is full\", \"No voicemail box set up\", \"Other\"), \n                                    size = 4941, replace = TRUE),\n      TRUE                 ~ NA\n    ),\n    no_message_other = case_when(\n      no_message == \"Other\" ~ other_op,\n      TRUE                  ~ NA\n    ),\n    answered_someone_else = case_when(\n      answered == \"Someone else answered\" ~ answered_someone_else_op,\n      TRUE                                ~ NA\n    ),\n    participant_contacted = case_when(\n      answered == \"Someone else answered\" ~ sample(c(\"Yes\", \"No\"), size = 4941, replace = TRUE),\n      TRUE                                ~ NA\n    ),\n    pc_no_result = case_when(\n      participant_contacted == \"No\" ~ pc_no_result_op,\n      TRUE                         ~ NA\n    ),\n    call_back_date_time = case_when(\n      pc_no_result == \"Scheduled call back\" ~ call_date_time + lubridate::days(2),\n      TRUE                                  ~ NA\n    ),\n    call_back_phone_number = case_when(\n      pc_no_result == \"Scheduled call back\" ~ participant_phone_number,\n      TRUE                                  ~ NA \n    ),\n    call_back_no = case_when(\n      pc_no_result == \"Unable to schedule callback\" ~ call_back_no_op,\n      TRUE                                          ~ NA\n    ),\n    call_back_no_other = case_when(\n      call_back_no == \"Other\" ~ other_op,\n      TRUE                    ~ NA\n    ),\n    pc_yes_result = case_when(\n      answered == \"Participant answered\" | participant_contacted == \"Yes\" ~ pc_yes_result_op\n    ),\n    interview_not_scheduled = case_when(\n      pc_yes_result == \"Interview not scheduled\" ~ interview_not_scheduled_op,\n      TRUE                                       ~ NA\n    ),\n    ineligible = case_when(\n      interview_not_scheduled == \"Participant is not eligible\" ~ ineligible_op,\n      TRUE                                                     ~ NA\n    ),\n    comments = comments\n  )\n```\n:::\n\n\n# Gift card data (Gift card ID, person ID and dyad ID)\n\n::: {.cell}\n\n```{.r .cell-code}\ngift_card <- recr_data %>% select\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}