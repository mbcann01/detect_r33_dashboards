# Load Packages
```{r}
library(dplyr)
library(here)
library(ids)
library(lubridate, include.only = c("year", "month", "day", "hour"))
```

```{r}
# Load function for converting POSIXct dates to a Month YYYY format.
source(here::here("r", "month_name_year.R"))
```

# Load data
```{r}
raw_data <- readRDS(here::here("data", "recruitment_and_scheduling_mock_data_raw.rds"))

weekdays(raw_data$call_date_time) %>% unique()
```

## Split the date-time variable
```{r}
date_time <- raw_data %>% 
  mutate(
    call_hour = lubridate::hour(call_date_time),
    call_hour_f = factor(call_hour, 
      labels = c("9-9:59", "10-10:59", "11-11:59", "12-12:59", "13-13:59", 
                 "14-14:59", "15-15:59", "16-16:59", "17")
      ),
    call_day = weekdays(as.Date(call_date_time)),
    call_day = factor(call_day,
                      levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")),
    call_date = as.Date(call_date_time)
    )%>%
      month_year(call_date_time, "call_month_yr") %>%
      relocate(c(call_month_yr, call_date, call_day, call_hour, call_hour_f), 
               .after = "call_date_time")
```

## Gift card data (Gift card ID, person ID and dyad ID)
```{r}
set.seed(56)
gift_card <- date_time %>% select(dyad_id, pc_yes_result) %>% filter(pc_yes_result == "Interview scheduled") %>% slice_sample(n = 180) %>%
  mutate(
    gift_card_id = ids::random_id(nrow(.), 5)
  ) %>% select(-c(pc_yes_result))
```

## Join to Gift card Data
```{r}
rec_sch_gift <- date_time %>% left_join(., gift_card, by = "dyad_id")
```

## Create column of the overall responses
```{r}
overall_response <- rec_sch_gift %>%
  mutate(
    overall_response = coalesce(interview_not_scheduled, pc_yes_result,
    call_back_no, pc_no_result, no_message, left_message, answered)
  )

```

# Save data
```{r}
# Save clinician tracking data
saveRDS(overall_response, here::here("data", "recruitment_mock_data_calc.rds"))
```
